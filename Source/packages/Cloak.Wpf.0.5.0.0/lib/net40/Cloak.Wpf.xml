<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cloak.Wpf</name>
    </assembly>
    <members>
        <member name="T:Cloak.Wpf.Mvvm.OperationModel">
            <summary>
            An asynchronous operation in a view model
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.ViewModel">
            <summary>
            Base class for objects which model the domain-specific behavior of a WPF view
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.ViewModel.#ctor">
            <summary>
            Initializes a view model with the effective dispatcher in the current context
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.ViewModel.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Cloak.Wpf.Mvvm.ViewModel.PropertyChanged"/> event
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.ViewModel.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Cloak.Wpf.Mvvm.ViewModel.PropertyChanged"/> event for the property with the specified name
            </summary>
            <param name="name">The name of the property which changed</param>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.ViewModel.SetProperty``1(System.String,``0@,``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Sets the property with the specified name to the specified value
            </summary>
            <typeparam name="TValue">The type of the property's value</typeparam>
            <param name="name">The name of the property to set</param>
            <param name="member">The member variable which holds the property's value</param>
            <param name="newValue">The new value to be applied to the property</param>
            <param name="equalityComparer">The comparer which determines whether the member and new value are equal</param>
            <returns>Whether the property changed</returns>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.ViewModel.SetProperty``1(System.String,``0@,``0)">
            <summary>
            Sets the property with the specified name to the specified value
            </summary>
            <typeparam name="TValue">The type of the property's value</typeparam>
            <param name="name">The name of the property to set</param>
            <param name="member">The member variable which holds the property's value</param>
            <param name="newValue">The new value to be applied to the property</param>
            <returns>Whether the property changed</returns>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.ViewModel.Dispatch(System.Action)">
            <summary>
            Adds the specified action to the queue of work items for this view model's thread
            </summary>
            <param name="action">The action to execute on the view model's thread</param>
            <returns>Whether this call was already running on the view model's thread</returns>
        </member>
        <member name="E:Cloak.Wpf.Mvvm.ViewModel.PropertyChanged">
            <summary>
            Occurs when a property value changes
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.ViewModel.Dispatcher">
            <summary>
            Gets the dispatcher which manages the queue of work items for this view model's thread
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.OperationModel.#ctor">
            <summary>
            Initializes an idle operation
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.OperationModel.ExecuteAsync(System.Action,System.Action,System.Action{System.Exception})">
            <summary>
            Carries out the specified work, optionally reporting on completion or failure
            </summary>
            <param name="work">The action representing the work to carry out</param>
            <param name="onCompleted">Handles when the work completes. If null, completions are a one-way operation.</param>
            <param name="onError">Handles when the work has an error. If null, errors are raised automatically.</param>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.OperationModel.ExecuteAsync``1(System.Func{``0},System.Action{``0},System.Action{System.Exception})">
            <summary>
            Calculates the result represented by the specified work, optionally reporting on completion or failure
            </summary>
            <typeparam name="TResult">The type of result calculated by the work</typeparam>
            <param name="work">The work which calculates the result</param>
            <param name="onCompleted">Handles when the work completes. If null, completions are a one-way operation.</param>
            <param name="onError">Handles when the work has an error. If null, errors are ignored after transition into the error state.</param>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.OperationModel.Status">
            <summary>
            Gets the status of the operation
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.OperationModel.IsInProgress">
            <summary>
            Gets whether <see cref="P:Cloak.Wpf.Mvvm.OperationModel.Status"/> is <see cref="F:Cloak.Wpf.Mvvm.OperationStatus.InProgress"/>
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.OperationModel.CancelCommand">
            <summary>
            Gets the command indicating the user canceled the operation
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.OperationModel.DoneCommand">
            <summary>
            Gets the command indicating the user is done with the operation
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.OperationModel.AcknowledgeCommand">
            <summary>
            Gets the command indicating the user acknowledged the most recent cancellation, error, or completion
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.Behavior`1">
            <summary>
            Base implementation of a behavior which can be attached to a host object
            </summary>
            <typeparam name="THost">The type of host object to which this behavior can be attached</typeparam>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.IBehavior">
            <summary>
            Describes a behavior which can be attached to a host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.IBehavior.IsApplicable">
            <summary>
            Determines whether this behavior is applicable to the host object
            </summary>
            <returns>Whether this behavior is applicable to the host object</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.IBehavior.Attach">
            <summary>
            Attaches this behavior to the host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.IBehavior.Detach">
            <summary>
            Detaches this behavior from the host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.IBehavior.Update">
            <summary>
            Synchronizes the behavior with the current state of the host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.#ctor(System.Windows.DependencyObject)">
            <summary>
            Initializes a behavior with the specified host object
            </summary>
            <param name="host">The object with which this behavior is associated</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.IsApplicable">
            <summary>
            Determines whether this behavior is applicable to the host object (if not garbage-collected)
            </summary>
            <returns>Whether this behavior is applicable to the host object</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.Attach">
            <summary>
            Attaches this behavior to the host object (if not garbage-collected)
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.Detach">
            <summary>
            Detaches this behavior from the host object (if not garbage-collected)
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.Update">
            <summary>
            Synchronizes the behavior with the current state of the host object (if not garbage-collected)
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.IsApplicable(`0)">
            <summary>
            Determines whether this behavior is applicable to the specified host object
            </summary>
            <returns>Whether this behavior is applicable to the host object</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.Attach(`0)">
            <summary>
            Attaches this behavior to the specified host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.Detach(`0)">
            <summary>
            Detaches this behavior from the specified host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.Update(`0)">
            <summary>
            When implemented by a derived class, synchronizes the behavior with the current state of the
            specified host object
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.Behavior`1.TryUpdate(System.Action{`0})">
            <summary>
            Executes the specified update on the host object (if not garbage-collected)
            </summary>
            <param name="update">The update to be execute on the host object if it has not been garbage-collected</param>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.EnumGroup">
            <summary>
            Manages an enumeration value based on the checked states of a group of radio buttons
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumGroup.ValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.Value"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumGroup.TargetValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.TargetValue"/> attached property
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumGroup.GetValue(System.Windows.Controls.RadioButton)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.Value"/> attached property
            </summary>
            <param name="radioButton">The radio button from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.Value"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumGroup.SetValue(System.Windows.Controls.RadioButton,System.Object)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.Value"/> attached property
            </summary>
            <param name="radioButton">The radio button on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.Value"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumGroup.GetTargetValue(System.Windows.Controls.RadioButton)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property
            </summary>
            <param name="radioButton">The radio button from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumGroup.SetTargetValue(System.Windows.Controls.RadioButton,System.String)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property
            </summary>
            <param name="radioButton">The radio button on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.EnumCheck">
            <summary>
            Checks whether an enumeration value matches text containing names of enumeration values
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumCheck.#ctor">
            <summary>
            Initializes a check which has never been matched
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumCheck.Update(System.Object,System.String)">
            <summary>
            Matches the specified enumeration value against the specified target value
            </summary>
            <param name="value">The value to match against the target value</param>
            <param name="targetValue">The text containing names of enumeration values to match against the value</param>
        </member>
        <member name="P:Cloak.Wpf.Behaviors.EnumCheck.Value">
            <summary>
            Gets the enumeration value against which the <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.TargetValue"/> property is matched
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Behaviors.EnumCheck.TargetValue">
            <summary>
            Gets the text containing names of enumeration values against which the <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.Value"/> property is matched
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Behaviors.EnumCheck.ParsedTargetValues">
            <summary>
            Gets the values parsed from the <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.TargetValue"/> property using the type of the <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.Value"/> property
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Behaviors.EnumCheck.ParsedTargetValue">
            <summary>
            Gets the first value in the <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.ParsedTargetValues"/> collection, or null if empty
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Behaviors.EnumCheck.IsMatch">
            <summary>
            Gets whether the <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.Value"/> and <see cref="P:Cloak.Wpf.Behaviors.EnumCheck.TargetValue"/> properties match
            </summary>
        </member>
        <member name="T:Cloak.Wpf.DispatcherContext">
            <summary>
            Provides access to the effective dispatcher in the current context
            </summary>
        </member>
        <member name="M:Cloak.Wpf.DispatcherContext.GetDispatcher">
            <summary>
            Gets the effective dispatcher in the current context
            </summary>
            <returns>The effective dispatcher in the current context</returns>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.EnumVisibility">
            <summary>
            Manages the <see cref="P:System.Windows.UIElement.Visibility"/> property using enumeration values
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumVisibility.ValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.Value"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumVisibility.TargetValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumVisibility.WhenMatchedProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenMatched"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumVisibility.WhenNotMatchedProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenNotMatched"/> attached property
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.GetValue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.Value"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.Value"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.SetValue(System.Windows.UIElement,System.Object)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.Value"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.Value"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.GetTargetValue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.SetTargetValue(System.Windows.UIElement,System.String)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.TargetValue"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.GetWhenMatched(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenMatched"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenMatched"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.SetWhenMatched(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenMatched"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenMatched"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.GetWhenNotMatched(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenNotMatched"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenNotMatched"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumVisibility.SetWhenNotMatched(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenNotMatched"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumVisibility.WhenNotMatched"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="T:Cloak.Wpf.ActionDispatch">
            <summary>
            Extension methods for dispatching <see cref="T:System.Action"/> delegates
            </summary>
        </member>
        <member name="M:Cloak.Wpf.ActionDispatch.Dispatch(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Dispatches the specified action to the dispatcher
            </summary>
            <param name="dispatcher">The dispatcher to which the specified action is dispatched</param>
            <param name="action">The action to be dispatched</param>
            <param name="priority">The priority with which the action is dispatched</param>
            <returns>Whether the dispatcher was already on the current thread</returns>
        </member>
        <member name="M:Cloak.Wpf.ActionDispatch.Dispatch(System.Windows.Threading.Dispatcher,System.Action)">
            <summary>
            Dispatches the specified action to the dispatcher with normal priority
            </summary>
            <param name="dispatcher">The dispatcher to which the specified action is dispatched</param>
            <param name="action">The action to be dispatched with normal priority</param>
            <returns>Whether the dispatcher was already on the current thread</returns>
        </member>
        <member name="M:Cloak.Wpf.ActionDispatch.Dispatch(System.Windows.Threading.DispatcherObject,System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Dispatches the specified action to the object's dispatcher
            </summary>
            <param name="dispatcherObject">The object associated with the dispatcher to which the specified action is dispatched</param>
            <param name="action">The action to be dispatched</param>
            <param name="priority">The priority with which the action is dispatched</param>
            <returns>Whether the object's dispatcher was already on the current thread</returns>
        </member>
        <member name="M:Cloak.Wpf.ActionDispatch.Dispatch(System.Windows.Threading.DispatcherObject,System.Action)">
            <summary>
            Dispatches the specified action to the object's dispatcher with normal priority
            </summary>
            <param name="dispatcherObject">The object associated with the dispatcher to which the specified action is dispatched</param>
            <param name="action">The action to be dispatched with normal priority</param>
            <returns>Whether the object's dispatcher was already on the current thread</returns>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.CommandBase">
            <summary>
            Base class for generic and non-generic implementations of a command
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.CommandBase.OnCanExecuteChanged">
            <summary>
            Raises the <see cref="E:Cloak.Wpf.Mvvm.CommandBase.CanExecuteChanged"/> event via the current dispatcher
            </summary>
        </member>
        <member name="E:Cloak.Wpf.Mvvm.CommandBase.CanExecuteChanged">
            <summary>
            Occurs when this command changes whether it can currently execute
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.NullVisibility">
            <summary>
            Manages the <see cref="P:System.Windows.UIElement.Visibility"/> property using nullable values
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.NullVisibility.ValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.Value"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.NullVisibility.WhenNullProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNull"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.NullVisibility.WhenNotNullProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNotNull"/> attached property
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.NullVisibility.GetValue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.Value"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.Value"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.NullVisibility.SetValue(System.Windows.UIElement,System.Object)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.Value"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.Value"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.NullVisibility.GetWhenNull(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNull"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNull"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.NullVisibility.SetWhenNull(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNull"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNull"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.NullVisibility.GetWhenNotNull(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNotNull"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNotNull"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.NullVisibility.SetWhenNotNull(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNotNull"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.NullVisibility.WhenNotNull"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.AttachedBehavior">
            <summary>
            Manages the attachment, detachment, and synchronization of a behavior and host objects
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.AttachedBehavior.Register(System.Func{System.Windows.DependencyObject,Cloak.Wpf.Behaviors.IBehavior})">
            <summary>
            Registers an attached behavior with the specified instance factory
            </summary>
            <param name="behaviorFactory">The factory which creates instances of the behavior for host objects</param>
            <returns>An object which manages the attachment, detachment, and synchronization of a behavior and host objects</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.AttachedBehavior.Update(System.Windows.DependencyObject)">
            <summary>
            Attaches, detaches, and/or synchronizes this behavior with the specified host object
            </summary>
            <param name="host">The object with which this behavior will be attached, detached, and/or synchronized</param>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.OperationStatus">
            <summary>
            The statuses of an asynchronous operation in a view model
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Mvvm.OperationStatus.Idle">
            <summary>
            There is no operation
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Mvvm.OperationStatus.InProgress">
            <summary>
            The operation is in progress
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Mvvm.OperationStatus.Done">
            <summary>
            The operation is done
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Mvvm.OperationStatus.Canceled">
            <summary>
            The operation was canceled
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Mvvm.OperationStatus.Error">
            <summary>
            The operation encountered an error
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.EnumIsEnabled">
            <summary>
            Manages the <see cref="P:System.Windows.UIElement.IsEnabled"/> property using enumeration values
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumIsEnabled.ValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.Value"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumIsEnabled.TargetValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.TargetValue"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenMatchedProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenMatched"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenNotMatchedProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenNotMatched"/> attached property
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.GetValue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.Value"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.Value"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.SetValue(System.Windows.UIElement,System.Object)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.Value"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.Value"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.GetTargetValue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.TargetValue"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.TargetValue"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.SetTargetValue(System.Windows.UIElement,System.String)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.TargetValue"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.TargetValue"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.GetWhenMatched(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenMatched"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenMatched"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.SetWhenMatched(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenMatched"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenMatched"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.GetWhenNotMatched(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenNotMatched"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenNotMatched"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumIsEnabled.SetWhenNotMatched(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenNotMatched"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumIsEnabled.WhenNotMatched"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Cloak.Wpf.Mvvm.Resources.InvalidOperationStatusUpdate">
            <summary>
              Looks up a localized string similar to Invalid operation status update from {0} to {1}: only valid from {2}.
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.Command">
            <summary>
            Base implementation of a command without a parameter
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.Command.CanExecute">
            <summary>
            When implemented in a derived class, determines whether this command can currently execute
            </summary>
            <returns>Whether this command can currently execute</returns>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.Command.Execute">
            <summary>
            When implemented in a derived class, executes this command
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.Command`1">
            <summary>
            Base implementation of a command with a parameter
            </summary>
            <typeparam name="TParameter">The type of parameter used by the command</typeparam>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.Command`1.CanExecute(`0)">
            <summary>
            When implemented in a derived class, determines whether this command can currently execute
            with the specified parameter
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null.
            </param>
            <returns>Whether this command can currently execute</returns>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.Command`1.Execute(`0)">
            <summary>
            When implemented in a derived class, executes this command with the specified parameter
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null.
            </param>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.BooleanVisibility">
            <summary>
            Manages the <see cref="P:System.Windows.UIElement.Visibility"/> property using <see cref="T:System.Boolean"/> values
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.BooleanVisibility.ValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.Value"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.BooleanVisibility.WhenTrueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenTrue"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.BooleanVisibility.WhenFalseProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenFalse"/> attached property
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.BooleanVisibility.GetValue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.Value"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.Value"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.BooleanVisibility.SetValue(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.Value"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.Value"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.BooleanVisibility.GetWhenTrue(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenTrue"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenTrue"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.BooleanVisibility.SetWhenTrue(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenTrue"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenTrue"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.BooleanVisibility.GetWhenFalse(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenFalse"/> attached property
            </summary>
            <param name="uiElement">The element from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenFalse"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.BooleanVisibility.SetWhenFalse(System.Windows.UIElement,System.Windows.Visibility)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenFalse"/> attached property
            </summary>
            <param name="uiElement">The element on which to set the <see cref="!:Cloak.Wpf.Behaviors.BooleanVisibility.WhenFalse"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.MethodCommand">
            <summary>
            A command which implements <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.CanExecute"/> and <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.Execute"/> using references to external methods
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand.#ctor(System.Action)">
            <summary>
            Initialize a command with the specified implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.Execute"/> method
            </summary>
            <param name="executeMethod">The implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.Execute"/> method</param>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initialize a command with the specified implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.Execute"/> method
            </summary>
            <param name="executeMethod">The implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.Execute"/> method</param>
            <param name="canExecuteMethod">The implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand.CanExecute"/> method</param>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand.CanExecute">
            <summary>
            Determines whether this command can currently execute
            </summary>
            <returns>Whether this command can currently execute</returns>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand.Execute">
            <summary>
            Executes this command
            </summary>
        </member>
        <member name="T:Cloak.Wpf.Mvvm.MethodCommand`1">
            <summary>
            A parameterized command which implements <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.CanExecute(`0)"/> and <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.Execute(`0)"/> using references to external methods
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initialize a command with the specified implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.Execute(`0)"/> method
            </summary>
            <param name="executeMethod">The implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.Execute(`0)"/> method</param>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            Initialize a command with the specified implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.Execute(`0)"/> method
            </summary>
            <param name="executeMethod">The implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.Execute(`0)"/> method</param>
            <param name="canExecuteMethod">The implementation of the <see cref="M:Cloak.Wpf.Mvvm.MethodCommand`1.CanExecute(`0)"/> method</param>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand`1.CanExecute(`0)">
            <summary>
            Determines whether this command can currently execute with the specified parameter
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null.
            </param>
            <returns>Whether this command can currently execute</returns>
        </member>
        <member name="M:Cloak.Wpf.Mvvm.MethodCommand`1.Execute(`0)">
            <summary>
            Executes this command with the specified parameter
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null.
            </param>
        </member>
        <member name="T:Cloak.Wpf.Behaviors.EnumSelector">
            <summary>
            Manages an enumeration value based on a selector's selected item
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumSelector.SelectedValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.SelectedValue"/> attached property
            </summary>
        </member>
        <member name="F:Cloak.Wpf.Behaviors.EnumSelector.ItemValueProperty">
            <summary>
            Identifies the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.ItemValue"/> attached property
            </summary>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumSelector.GetSelectedValue(System.Windows.Controls.Primitives.Selector)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.SelectedValue"/> attached property
            </summary>
            <param name="selector">The selector from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.SelectedValue"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumSelector.SetSelectedValue(System.Windows.Controls.Primitives.Selector,System.Object)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.SelectedValue"/> attached property
            </summary>
            <param name="selector">The selector on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.SelectedValue"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumSelector.GetItemValue(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.ItemValue"/> attached property
            </summary>
            <param name="item">The selector item from which to read the property value</param>
            <returns>The value of the <see cref="!:Cloak.Wpf.Behaviors.EnumGroup.ItemValue"/> attached property</returns>
        </member>
        <member name="M:Cloak.Wpf.Behaviors.EnumSelector.SetItemValue(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.ItemValue"/> attached property
            </summary>
            <param name="item">The selector item on which to set the <see cref="!:Cloak.Wpf.Behaviors.EnumSelector.ItemValue"/> attached property</param>
            <param name="value">The property value to set</param>
        </member>
    </members>
</doc>
