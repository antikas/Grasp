<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{177B3825-0297-44E1-AFA9-FFC86DF13194}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Grasp</RootNamespace>
    <AssemblyName>Grasp.Examples</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Castle.Core">
      <HintPath>..\packages\Castle.Core.2.5.2\lib\NET35\Castle.Core.dll</HintPath>
    </Reference>
    <Reference Include="Cloak, Version=0.4.2.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Cloak.0.4.2.0\lib\net40\Cloak.dll</HintPath>
    </Reference>
    <Reference Include="Cloak.NUnit">
      <HintPath>..\packages\Cloak.NUnit.0.4.0.0\lib\net40\Cloak.NUnit.dll</HintPath>
    </Reference>
    <Reference Include="FakeItEasy">
      <HintPath>..\packages\FakeItEasy.1.7.4257.42\lib\NET40\FakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\packages\NUnit.2.5.10.11092\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="nunit.mocks">
      <HintPath>..\packages\NUnit.2.5.10.11092\lib\nunit.mocks.dll</HintPath>
    </Reference>
    <Reference Include="pnunit.framework">
      <HintPath>..\packages\NUnit.2.5.10.11092\lib\pnunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\SolutionAssemblyInfo.cs">
      <Link>Properties\SolutionAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="Analysis\CalculationToString.cs" />
    <Compile Include="Analysis\Compilation\CompileWithUnknownVariable.cs" />
    <Compile Include="Analysis\Compilation\CompileWithImplicitVariable.cs" />
    <Compile Include="Analysis\Compilation\CompileWithUnassignableType.cs" />
    <Compile Include="Analysis\Compilation\CompileWithInvalidExpression.cs" />
    <Compile Include="Analysis\Compilation\CompileWithCycle.cs" />
    <Compile Include="Analysis\Compilation\CompileWithDeepCycle.cs" />
    <Compile Include="Analysis\Compilation\CompileWithDerivedType.cs" />
    <Compile Include="Analysis\Compilation\GetRuntime.cs" />
    <Compile Include="Analysis\Compilation\CreateGraspExecutable.cs" />
    <Compile Include="Analysis\CompileGraspSchema.cs" />
    <Compile Include="Analysis\Calculators\ApplyFunctionCalculator.cs" />
    <Compile Include="Analysis\Calculators\ApplyCompositeCalculator.cs" />
    <Compile Include="Analysis\Calculators\CreateCompositeCalculator.cs" />
    <Compile Include="Analysis\Calculators\CreateFunctionCalculator.cs" />
    <Compile Include="Analysis\CreateVariableBinding.cs" />
    <Compile Include="Analysis\Runtime\ApplyCalculations.cs" />
    <Compile Include="Analysis\Runtime\ApplySingleCalculation.cs" />
    <Compile Include="Analysis\Runtime\ApplyMultipleCalculations.cs" />
    <Compile Include="Analysis\Runtime\ApplySingleCalculationWithVariable.cs" />
    <Compile Include="Analysis\Runtime\ApplySingleCalculationWithTwoVariables.cs" />
    <Compile Include="Analysis\Runtime\ApplyDependentCalculations.cs" />
    <Compile Include="Analysis\Runtime\SetUnboundVariableValue.cs" />
    <Compile Include="Analysis\Runtime\SetBoundVariableValue.cs" />
    <Compile Include="Analysis\Runtime\GetUnboundVariableValue.cs" />
    <Compile Include="Analysis\Runtime\GetBoundVariableValue.cs" />
    <Compile Include="Analysis\Runtime\CreateGraspRuntime.cs" />
    <Compile Include="Analysis\CreateGraspSchema.cs" />
    <Compile Include="Analysis\CreateCalculation.cs" />
    <Compile Include="Analysis\Variables\VariableExpressionToString.cs" />
    <Compile Include="Analysis\Variables\CreateExpression.cs" />
    <Compile Include="Analysis\Variables\Namespaces\EmptyIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\DotAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\DotAtStartIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\ExtraDotIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\DigitAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\DigitFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\DigitInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\IsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\SpaceAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\SpaceFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\SpaceInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\SymbolAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\SymbolFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\SymbolInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\UnderscoreAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\UnderscoreFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\MultipleParts\UnderscoreInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\DigitAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\DigitFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\DigitInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\IsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\SpaceAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\SpaceFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\SpaceInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\SymbolAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\SymbolFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\SymbolInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\UnderscoreAtEndIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\UnderscoreFirstIsNamespace.cs" />
    <Compile Include="Analysis\Variables\Namespaces\SinglePart\UnderscoreInMiddleIsNamespace.cs" />
    <Compile Include="Analysis\Variables\VariableToString.cs" />
    <Compile Include="Analysis\Variables\Names\UnderscoreAtEndIsName.cs" />
    <Compile Include="Analysis\Variables\Names\SymbolAtEndIsName.cs" />
    <Compile Include="Analysis\Variables\Names\SpaceAtEndIsName.cs" />
    <Compile Include="Analysis\Variables\Names\DigitAtEndIsName.cs" />
    <Compile Include="Analysis\Variables\Names\SpaceInMiddleIsName.cs" />
    <Compile Include="Analysis\Variables\Names\SpaceFirstIsName.cs" />
    <Compile Include="Analysis\Variables\Names\DigitInMiddleIsName.cs" />
    <Compile Include="Analysis\Variables\Names\UnderscoreInMiddleIsName.cs" />
    <Compile Include="Analysis\Variables\Names\SymbolInMiddleIsName.cs" />
    <Compile Include="Analysis\Variables\Names\SymbolFirstIsName.cs" />
    <Compile Include="Analysis\Variables\Names\EmptyIsName.cs" />
    <Compile Include="Analysis\Variables\Names\DigitFirstIsName.cs" />
    <Compile Include="Analysis\Variables\Names\UnderscoreFirstIsName.cs" />
    <Compile Include="Analysis\Variables\Names\IsName.cs" />
    <Compile Include="Analysis\Variables\CreateVariable.cs" />
    <Compile Include="Checks\Annotation\GetAnnotatedConditionWithDefaultNameOverride.cs" />
    <Compile Include="Checks\Annotation\GetAnnotatedCondition.cs" />
    <Compile Include="Checks\Annotation\CreateAnnotatedConditionSourceWithDefaultNameOverride.cs" />
    <Compile Include="Checks\Annotation\CreateAnnotatedConditionSource.cs" />
    <Compile Include="Checks\Annotation\GetCheckConditionWithRepeatedName.cs" />
    <Compile Include="Checks\Annotation\GetCheckConditionWithNameWithSpaces.cs" />
    <Compile Include="Checks\Annotation\GetCheckConditionWithTwoNames.cs" />
    <Compile Include="Checks\Annotation\GetCheckConditionWithName.cs" />
    <Compile Include="Checks\Annotation\GetCheckConditionNegated.cs" />
    <Compile Include="Checks\Annotation\GetCheckCondition.cs" />
    <Compile Include="Checks\Conditions\Sources\ChangeDefaultDeclarationNames.cs" />
    <Compile Include="Checks\ApplyThatCheck.cs" />
    <Compile Include="Checks\ApplyThatCheckWithDefaultResult.cs" />
    <Compile Include="Checks\Conditions\CreateTypedConditionWithName.cs" />
    <Compile Include="Checks\Conditions\CreateTypedCondition.cs" />
    <Compile Include="Checks\Conditions\CreateConditionWithTargetTypeAndName.cs" />
    <Compile Include="Checks\Conditions\CreateConditionWithTargetType.cs" />
    <Compile Include="Checks\Conditions\CreateCondition.cs" />
    <Compile Include="Checks\Conditions\Keys\GetNameEqualityComparer.cs" />
    <Compile Include="Checks\Conditions\Keys\GetInvalidName.cs" />
    <Compile Include="Checks\Conditions\Keys\GetDefaultName.cs" />
    <Compile Include="Checks\Conditions\Keys\InvariantNameIsInvariantName.cs" />
    <Compile Include="Checks\Conditions\Keys\DefaultNameIsDefaultName.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToNullOfTargetType.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToNonTargetInstance.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToNonTargetType.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToNull.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToTargetInstance.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToAssignableInstance.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToTargetType.cs" />
    <Compile Include="Checks\Conditions\Keys\KeyAppliesToAssignableType.cs" />
    <Compile Include="Checks\Conditions\Keys\NameEqualsDifferentCase.cs" />
    <Compile Include="Checks\Conditions\Keys\NameEqualsDifferent.cs" />
    <Compile Include="Checks\Conditions\Keys\NameEquals.cs" />
    <Compile Include="Checks\Conditions\Keys\KeysEqualWithName.cs" />
    <Compile Include="Checks\Conditions\Keys\KeysEqualWithDifferentType.cs" />
    <Compile Include="Checks\Conditions\Keys\KeysEqualWithDifferentName.cs" />
    <Compile Include="Checks\Conditions\Keys\KeysEqual.cs" />
    <Compile Include="Checks\Conditions\Keys\KeysEqualWithDifferentCase.cs" />
    <Compile Include="Checks\Conditions\Keys\KeysEqualWithOneUnnamed.cs" />
    <Compile Include="Checks\Conditions\Keys\CreateKeyWithInvariantName.cs" />
    <Compile Include="Checks\Conditions\Keys\CreateKeyWithDefaultName.cs" />
    <Compile Include="Checks\Conditions\Keys\CreateKeyWithName.cs" />
    <Compile Include="Checks\Conditions\Keys\CreateKey.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForPropertyMethods.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForPropertyFieldMethod.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForMethodWithParameters.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForVoidMethod.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForMemberWithMultiple.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForMethod.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForProperty.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsForField.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsWithNoSources.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsWithSingleSource.cs" />
    <Compile Include="Checks\Conditions\Sources\GetConditionsWithMultipleSources.cs" />
    <Compile Include="Checks\Conditions\Repositories\GetConditionTwice.cs" />
    <Compile Include="Checks\Conditions\Repositories\GetConditionWithUnknownKey.cs" />
    <Compile Include="Checks\Conditions\Repositories\GetConditionWithOtherKeys.cs" />
    <Compile Include="Checks\Conditions\Repositories\GetConditionWithTwo.cs" />
    <Compile Include="Checks\Conditions\Repositories\GetConditionWithOne.cs" />
    <Compile Include="Checks\Conditions\Repositories\GetConditionWithNone.cs" />
    <Compile Include="Checks\Conditions\GetSpecificationForUnknownCondition.cs" />
    <Compile Include="Checks\CreateCheck.cs" />
    <Compile Include="Checks\ImplicitlyConvertCheckToBoolean.cs" />
    <Compile Include="Checks\CreateThatCheckWithDefaultResult.cs" />
    <Compile Include="Checks\CreateThatCheck.cs" />
    <Compile Include="Checks\Methods\GetRuleWithTwoArguments.cs" />
    <Compile Include="Checks\Methods\GetRuleWithOneArgument.cs" />
    <Compile Include="Checks\Methods\GetRule.cs" />
    <Compile Include="Checks\Methods\GetEffectiveTargetType.cs" />
    <Compile Include="Checks\Methods\GetRuleForUnsupportedTargetType.cs" />
    <Compile Include="Checks\Methods\GetCheckArguments.cs" />
    <Compile Include="Checks\Methods\GetCheckType.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsWhiteSpaceRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsWhiteSpaceRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsUpperCaseRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsUpperCaseRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsSymbolRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsSymbolRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsSurrogateRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsSurrogateRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsSeparatorRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsSeparatorRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsPunctuationRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsPunctuationRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLowSurrogateRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLowSurrogateRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLowerCaseRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLowerCaseRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLetterOrDigitRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLetterOrDigitRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLetterRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsLetterRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsHighSurrogateRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsHighSurrogateRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsDigitRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsDigitRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsControlRuleNonChar.cs" />
    <Compile Include="Checks\Methods\Inherent\Characters\GetIsControlRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetMatchesRuleWithPatternAndOptions.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetMatchesRuleWithPattern.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetMatchesRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetMatchesRuleWithRegex.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsLeapYearRuleNonDateTime.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsLeapYearRule.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsWeekdayRuleNonDateTime.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsWeekdayRule.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsWeekendRuleNonDateTime.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsWeekendRule.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsFalseRuleNonBoolean.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsTrueRuleNonBoolean.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsTrueRule.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsFalseRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetStartsWithRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetStartsWithRuleWithCulture.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetStartsWithRuleWithComparisonType.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNotNullOrWhiteSpaceRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNotNullOrWhiteSpaceRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNullOrWhiteSpaceRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNullOrWhiteSpaceRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNotNullOrEmptyRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNotNullOrEmptyRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNullOrEmptyRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNullOrEmptyRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNotEmptyRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsNotEmptyRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsEmptyRule.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetIsEmptyRuleNonString.cs" />
    <Compile Include="Checks\Methods\Inherent\Strings\GetStartsWithRule.cs" />
    <Compile Include="Checks\Methods\SingleTypeMethodSupportsUnsupportedType.cs" />
    <Compile Include="Checks\Methods\SingleTypeMethodSupportsDerivedType.cs" />
    <Compile Include="Checks\Methods\SingleTypeMethodSupportsTargetType.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsEqualToRule.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsNotNullRule.cs" />
    <Compile Include="Checks\Methods\Inherent\GetIsNullRule.cs" />
    <Compile Include="Checks\Rules\MakeMemberRuleForNonMemberType.cs" />
    <Compile Include="Checks\Rules\MakeMemberRuleForMethod.cs" />
    <Compile Include="Checks\Rules\MakeMemberRuleForField.cs" />
    <Compile Include="Checks\Rules\MakeMemberRuleForProperty.cs" />
    <Compile Include="Checks\Rules\CreateMethodRule.cs" />
    <Compile Include="Checks\Rules\CreateFieldRule.cs" />
    <Compile Include="Checks\Rules\CreatePropertyRule.cs" />
    <Compile Include="Checks\Rules\CreateNotRule.cs" />
    <Compile Include="Checks\Rules\MakeBinaryRuleForNonBinaryType.cs" />
    <Compile Include="Checks\Rules\MakeBinaryRuleForExclusiveOr.cs" />
    <Compile Include="Checks\Rules\MakeBinaryRuleForOr.cs" />
    <Compile Include="Checks\Rules\MakeBinaryRuleForAnd.cs" />
    <Compile Include="Checks\Rules\CreateExclusiveOrRule.cs" />
    <Compile Include="Checks\Rules\CreateOrRule.cs" />
    <Compile Include="Checks\Rules\CreateAndRule.cs" />
    <Compile Include="Checks\Rules\CreateLambdaRule.cs" />
    <Compile Include="Checks\Rules\CreateConstantRule.cs" />
    <Compile Include="Checks\Rules\CreateCheckRuleWithArguments.cs" />
    <Compile Include="Checks\Rules\CreateCheckRule.cs" />
    <Compile Include="Checks\Conditions\GetSpecification.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Grasp\Grasp.csproj">
      <Project>{0A728107-2D52-4E6B-B651-793048876837}</Project>
      <Name>Grasp</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>